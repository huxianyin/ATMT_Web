{"version":3,"sources":["components/Setting.js","components/CompleteBar.js","components/TrailMakingTest.js","components/TaskPage.js","components/LineChart.js","components/Report.js","App.js","index.js"],"names":["Setting","props","react_default","a","createElement","className","onClick","Reset","type","pattern","defaultValue","exp_name","onChange","v","handleParamChange","target","value","step","min","max","num","defaultChecked","task_r","checked","react_router_dom","to","nextPhase","CompleteBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","started","completeNum","progress","_step","setState","_num","completenum","_this2","style","backgroundColor","width","transition","concat","height","style_text","position","textAlign","left","parseInt","Component","jp","en","TrailMakingTest","finished","completeBar","alphabet_array","table","posNumber","posBlanck","nextAnswer","lastTime","setting","phase","includes","trial_step","trial_num","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","pos1","pos2","num_row","abs","real_num","numToGenerate","offset","rand_idx","i","push","shuffled_rand_idx","shuffle","IsNeibor","slice","shift","rows","item_id","cols","j","key","id","indexOf","handleMarkClick","bind","putNumber","element_id","numberText","alphabetText","showText","n","ceil","sqrt","real_step","generateFunc","generateMarksA","generateMarksB","movingForward","overStep","ceilSqrt","updatePosition","clickEvent","nowDate","Date","timestamp","getTime","rt","onUpdateResult","reaction_time","setCompleteNumber","newTable","generateMarks","setAttribute","setTimeout","lang","setNum","setStep","showedTable","showedStartPannel","onStart","startDate","showedNextButton","components_CompleteBar","ref","instance","RULE_TEXT","trialA","partA","trialB","partB","generate_phase_name","isTrial","taskType","TaskPage","rule_content","generate_rule","title","toUpperCase","components_TrailMakingTest","onClearHistory","LineChart","cond_data","data","filter","item","condition_label","condition","x_label","x","y_label","y","chartData","labels","map","datasets","label","borderColor","color","borderWidth","dist","options","responsive","maintainAspectRatio","Report","jsons","save_path","results","JSON","stringify","keys","join","d","components_LineChart","marginLeft:","result","element","document","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","Download_default","marginLeft","defaultSettings","App","Array","window","confirm","location","reload","name","parseFloat","components_TaskPage","reset","MySettingPage","components_Setting","handleParameterChange","TrailAPage","generage_page","PartAPage","TrailBPage","PartBPage","ReportPage","components_Report","save_dir","basename","react_router","exact","path","ReactDOM","createRoot","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.f1a48b23.chunk.js","sourcesContent":["import React from 'react';\nimport {  Link } from 'react-router-dom';\n\nimport '../css/Setting.css';\n\n\nconst Setting = (props) => {\n    const min_num = 1;\n    const min_step = 1;\n    const max_step = 20;\n    const max_num = 20;\n    return (\n      <div className=\"Setting\">\n        <header>\n        <button className=\"reset-btn\" onClick={()=>{props.Reset();}}>Reset</button>\n          <h1 className=\"h1-text\">ATMT</h1>\n          <h2 className=\"h1-text\">~Advanced Trail Making Test~</h2>\n        </header>\n\n        <div className=\"input-panel\" >\n\n          <div className=\"sub-container\">\n            <div className=\"param-label\">{\"Experiment Name\"}</div>\n            <div className=\"param-label\">{\"Num \"+\"(\"+min_num+\"-\"+max_num+\")\"}</div>\n            <div className=\"param-label\">{\"Step \"+\"(\"+min_step+\"-\"+max_step+\")\"}</div>\n            <div className=\"param-label\">Task-R</div>\n          </div>\n\n          <div className=\"sub-container\">\n              <div className=\"param-input\">\n                    <input className=\"input-area\" type=\"text\" pattern=\"[0-9]*-[0-9]*\" defaultValue={props.exp_name} onChange={\n                      (v) =>{\n                      props.handleParamChange(\"exp_name\",v.target.value);\n                      }\n                    }/>\n              </div>\n              \n              <div className=\"param-input\">\n                    <input className=\"input-area\" type=\"number\" pattern=\"[0-9]*\" step=\"1\" min={min_num} max={max_num} defaultValue={props.num} onChange={\n                      (v) =>{\n                        var value = v.target.value > max_num? max_num : v.target.value;\n                        value = value < min_num ? min_num : value;\n                        props.handleParamChange(\"num\",value);\n                      }\n                    }/>\n              </div>\n\n              <div className=\"param-input\">\n                    <input className=\"input-area\" type=\"number\" pattern=\"[0-9]*\" step=\"1\" min={min_step} max={max_step} defaultValue={props.step} onChange={\n                      (v) =>{\n                        var value = v.target.value > max_step? max_step : v.target.value;\n                        value = value < min_step ? min_step : value;\n                        props.handleParamChange(\"step\",value);\n                      }\n                    }/>\n              </div>\n\n              <div className=\"param-input\">\n                <label className=\"myCheckbox\">\n                    <input type=\"checkbox\" defaultChecked={props.task_r} onChange={\n                      (v) =>{\n                        props.handleParamChange(\"task_r\",v.target.checked);\n                      }}/>\n                    <span className=\"checkmark\"></span>\n                </label>\n              </div>\n          </div>\n        </div>\n        <button className=\"my-btn\" >\n         <Link to={props.nextPhase}>Next</Link>\n         </button>\n        \n      </div>\n    );\n  }\n\nexport default Setting;\n","import React, { Component } from 'react';\nimport '../css/tmtStyle.css';\n\nclass CompleteBar extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          started : props.started,\n          completeNum : 0,\n          step : 0,\n          num: 0,\n          progress:0.0\n        }\n    }\n\n    setStep(_step)\n    {\n        this.state.step = _step;\n        this.setState({step:_step});\n    }\n\n    setNum(_num)\n    {\n        this.state.num = _num;\n        this.setState({num:_num});\n    }\n\n    onStart()\n    {\n        this.state.started = true;\n        this.setState({started:true});\n    }\n    setCompleteNumber(completenum)\n    {\n        this.state.completeNum = completenum;\n        var progress = 0.0;\n        if(this.state.num === 0){\n            progress = 0.0;\n        }\n        else\n        {\n            progress = this.state.completeNum / (this.state.num + this.state.step);\n        }\n        this.state.progress = progress;\n        this.setState({completeNum:completenum,progress:progress});\n\n    }\n\n    componentDidMount()\n    {\n        this.state.completeNum = 0;\n        this.state.step = 0;\n        this.state.num = 0;\n        this.state.progress = 0.0;\n    }\n\n    render(){\n        const style = {\n            backgroundColor: '#0BD318',\n            width: this.state.progress*100 + '%',\n            transition: `width ${200}ms`,\n            height: 5\n          };\n        const style_text = {\n            position:'fixed',\n            textAlign:'center',\n            left:'44%'\n        };\n        return (            \n        <div className=\"completeBar\" style={style}>\n            {(() => {\n                    if (this.state.started)\n                    {\n                        return <p style={style_text}>{\"完成：\"+ parseInt(this.state.progress*100)+\"%\"}</p>;\n                    }\n                })()\n            }\n        </div>\n    );}\n}\n\nexport default CompleteBar;\n","import React, { Component } from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../css/tmtStyle.css';\nimport CompleteBar from './CompleteBar';\n\n//move to app js because they are global settings!!\n\nconst jp = [\"あ\",\"い\",\"う\",\"え\",\"お\",\"か\",\"き\",\"く\",\"け\",\"こ\",\"さ\",\"し\",\"す\",\"せ\",\"そ\",\"た\",\"ち\",\"つ\",\"て\",\"と\",\"な\",\"に\",\"ぬ\",\"ね\",\"の\",\"は\",\"ひ\",\"ふ\",\"へ\",\"ほ\",\"ま\",\"み\",\"む\",\"め\",\"も\",\"や\",\"ゆ\",\"よ\",\"ら\",\"り\",\"る\",\"れ\",\"ろ\",\"わ\",\"を\",\"ん\"];\nconst en = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\n\nclass TrailMakingTest extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          started : false,\n          finished : false,\n          completeBar : null,\n          alphabet_array : [],\n          table : [],\n          posNumber:[],\n          posBlanck:[],\n          nextAnswer : 0,\n          lastTime : 0,\n          setting : {\n            step: props.phase.includes('trial')?props.trial_step:props.step,\n            num: props.phase.includes('trial')?props.trial_num:props.num,\n          },\n        };\n      }\n\n\n    shuffle(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      }\n      \n    IsNeibor(pos1,pos2,num_row){\n        if(num_row<=4)\n        {\n            return false;\n        }\n        if(Math.abs(pos1-pos2)<2)\n        {\n            return true;\n        }\n        if(Math.abs(pos1-pos2) === num_row)\n        {\n            return true;\n        }\n        return false;\n    }\n\n    updatePosition(num_row,real_num,numToGenerate,offset,random)\n    {\n        if(random)\n            {\n                var rand_idx = [];\n                for(var i=0;i<num_row*num_row;i++)\n                {\n                    rand_idx.push(i);\n                }\n                var shuffled_rand_idx = this.shuffle(rand_idx);\n                while(this.IsNeibor(shuffled_rand_idx[0] , this.state.posNumber[0],num_row) && offset!=0)\n                {\n                    shuffled_rand_idx = this.shuffle(rand_idx);\n                }\n                this.state.posNumber = shuffled_rand_idx.slice(0,numToGenerate);;\n                this.state.posBlanck = shuffled_rand_idx.slice(numToGenerate,rand_idx.length);\n            }\n        else{\n            if(numToGenerate < real_num)\n            {\n                this.state.posBlanck.push(this.state.posNumber[0]);\n                this.state.posNumber.shift();\n            }\n            else\n            {\n                this.state.posBlanck.push(this.state.posNumber[0]);\n                this.state.posNumber.shift();\n                this.state.posNumber.push(this.state.posBlanck[0]);\n                this.state.posBlanck.shift();\n            }\n        }\n    }\n\n    generateMarksA(num_row,offset)\n    {\n        var rows = [];\n        var item_id = 0;\n        for(var i=0;i<num_row;i++)\n        {\n            var cols = [];\n            for(var j=0;j<num_row;j++)\n            {\n                if(this.state.posNumber.includes(item_id))\n                {\n                    cols.push(<th key={item_id}><button id={this.state.posNumber.indexOf(item_id)+offset} onClick={this.handleMarkClick.bind(this)} className=\"mark\">{this.state.posNumber.indexOf(item_id)+1+offset}</button></th>);\n                }\n                else\n                {\n                    cols.push(<th key={item_id}><button className='transparent'/></th>);\n                }\n                item_id++;\n            }\n            rows.push(<tr key={i}>{cols}</tr>);\n        }\n        return rows;\n    }\n\n    generateMarksB(num_row,offset)\n    {\n        var rows = [];\n        var item_id = 0;\n        var putNumber = true;\n        for(var i=0;i<num_row;i++)\n        {\n            var cols = [];\n            for(var j=0;j<num_row;j++)\n            {\n                if(this.state.posNumber.includes(item_id))\n                {\n                    var element_id = this.state.posNumber.indexOf(item_id) + offset;\n                    putNumber = element_id % 2 === 0 ? true : false;\n                    var numberText = Math.floor((element_id)/2) + 1 ;\n                    var alphabetText = this.state.alphabet_array[(Math.floor((element_id)/2))%this.state.alphabet_array.length];\n                    var showText = putNumber ? numberText : alphabetText;\n                    cols.push(<th key={item_id}><button id={element_id} onClick={this.handleMarkClick.bind(this)} className=\"mark\">{showText}</button></th>);\n                }\n                else\n                {\n                    cols.push(<th key={item_id}><button className='transparent'/></th>);\n                }\n                item_id++;\n            }\n            rows.push(<tr key={i}>{cols}</tr>);\n        }\n        return rows;\n    }\n\n    ceilSqrt(n){\n        return Math.ceil(Math.sqrt(n));\n    }\n\n    generateMarks(phase,offset,random){\n        var real_num = phase.includes('A') ? this.state.setting.num : this.state.setting.num*2;\n        var real_step = phase.includes('A') ? this.state.setting.step : this.state.setting.step*2;\n        var generateFunc = phase.includes('A') ? this.generateMarksA.bind(this) : this.generateMarksB.bind(this);\n\n        var movingForward = this.state.nextAnswer < real_step;\n        var overStep = offset - real_step;\n        var num_row = this.ceilSqrt(real_num)+1;\n        var numToGenerate = movingForward ? real_num :  real_num-overStep ;\n        if(numToGenerate>0)\n        {\n            this.updatePosition(num_row,real_num,numToGenerate,offset,random);\n            return generateFunc(num_row,offset);\n        }\n        else\n        {\n            this.state.finished = true;\n            this.setState({finished:true});\n        }\n    }\n\n\n    handleMarkClick(clickEvent){\n        const item_id = clickEvent.target.id;\n        if(item_id == this.state.nextAnswer)\n        {\n            this.state.nextAnswer = this.state.nextAnswer+1;\n            //recored data\n            var nowDate = new Date();\n            const timestamp = nowDate.getTime()/1000;\n            const rt = timestamp-this.state.lastTime;\n            nowDate = null;\n            this.props.onUpdateResult({\"item_id\":item_id,\"timestamp\":timestamp,\"reaction_time\":rt,\"phase\":this.props.phase});\n\n            this.state.lastTime = timestamp;\n            this.state.completeBar.setCompleteNumber(this.state.nextAnswer);\n            const newTable = this.generateMarks(this.props.phase,this.state.nextAnswer,this.props.task_r);\n            this.setState({table:newTable});\n        }\n        else\n        {\n            clickEvent.target.setAttribute(\"Class\", \"mark_wrong\");\n            setTimeout( function (target){\n                target.setAttribute(\"Class\", \"mark\");\n            }.bind(this,clickEvent.target),500);\n        }\n\n    }\n\n    componentDidMount()\n    {\n        this.state.nextAnswer = 0;\n        this.state.lastTime = 0;\n        this.state.started = false;\n        if(this.props.lang === \"jp\")\n        {\n            this.state.alphabet_array = jp;\n        }\n        else if(this.props.lang === \"en\")\n        {\n            this.state.alphabet_array = en;\n        }\n        this.state.completeBar.setCompleteNumber(this.state.nextAnswer);\n        var real_num = this.props.phase.includes('A') ? this.state.setting.num : this.state.setting.num*2;\n        var real_step = this.props.phase.includes('A') ? this.state.setting.step : this.state.setting.step*2;\n        this.state.completeBar.setNum(real_num);\n        this.state.completeBar.setStep(real_step);\n\n        this.setState({table:this.generateMarks(this.props.phase,this.state.nextAnswer,true)});\n    }\n\n    render(){\n        var showedTable = (<table className=\"posMesh\">\n            <tbody>\n                {this.state.table}\n            </tbody>\n        </table>);\n\n        var showedStartPannel = (\n            <button className=\"startPannel\" onClick={()=>{\n                this.state.started = true;this.setState({started:true});\n                this.state.completeBar.onStart();\n                var startDate = new Date();\n                this.state.lastTime = startDate.getTime()/1000;\n                startDate = null;    \n                }}>\n                <span>準備はいいですか？</span>\n            </button>\n        )\n\n        var showedNextButton = (\n            <button className=\"nextPanel\">\n                <Link to={this.props.nextPhase}>NEXT</Link>\n            </button>\n        )\n        return (\n        <div className=\"container\">\n            <div className=\"window\">\n                {(() => {\n                    if (!this.state.started)\n                    {\n                        return showedStartPannel;\n                    }\n                    else if(this.state.finished)\n                    {\n                        return <p className=\"finish-message\">{\"終わりました!\"}</p>\n                    }\n                    return showedTable;\n                    \n                   })()\n                }\n            </div>\n            {(() => {\n                if (!this.state.finished)\n                {\n                    return <CompleteBar className='completeBar' started={this.state.started} ref={instance => { this.state.completeBar = instance; }}/>;\n                }\n                else\n                {\n                    return showedNextButton;\n                }\n            })()\n            }\n            \n\n        </div>\n        \n        );}\n}\n\nexport default TrailMakingTest;\n","import React from 'react';\nimport TrailMakingTest from './TrailMakingTest'\nimport '../css/tmtStyle.css';\n\nconst RULE_TEXT={\n  \"trialA\":<p>今から，検査Aのための練習をします。画面に書かれている数字の<span>『1－2－3』</span>というような順番にできるだけ早く押してください。練習の成績は最後の成績に記入しません。練習は終わったら、本番の課題に進めます。</p>,\n  \"partA\":<p>スタートしたら，<span>検査A本番</span>が始まります。画面に書かれている数字の<span>『1－2－3』</span>というような順番にできるだけ早く押してください。この成績は最後の成績に記入します。</p>,\n  \"trialB\":<p>検査Bは少し違うことをしていただきます。最初は練習です。今度は<span>『1－あ－2－い－3－う』</span>というような数字と仮名を交互した順番でボタンを押してください。もし途中で数字と仮名が交互でなかったり，順番を間違ったりすると不正解と判定されます。できるだけ早く行なってください。練習の成績は最後の成績に記入しません。練習は終わったら、本番の課題に進めます。</p>,\n  \"partB\":<p>スタートしたら，<span>検査B本番</span>が始まります。画面に書かれている数字と仮名を、<span>『1－あ－2－い－3－う』</span>というような数字と仮名を交互した順番でボタンを押してください。この成績は最後の成績に記入します。</p>,\n}\n\n\nfunction generate_phase_name(isTrial,taskType){\n  return (isTrial?\"trial\":\"part\")+taskType;\n}\n\n\nfunction generate_rule(isTrial,taskType){\n  const phase = generate_phase_name(isTrial,taskType);\n  return RULE_TEXT[phase];\n}\n\nfunction generate_title(isTrial,taskType){\n  return \"〜 \" + (isTrial?\"trial\":\"part\").toUpperCase()+\" \"+taskType+\" 〜\";\n}\n\n// a stateless component\nconst TaskPage = (props) => {\n    const rule_content = generate_rule(props.isTrial,props.taskType);\n    const phase = generate_phase_name(props.isTrial,props.taskType);\n    const title = generate_title(props.isTrial,props.taskType);\n\n    return (\n      <div className=\"container\">\n          <button className=\"reset-btn\" onClick={()=>{props.Reset();}}>Reset</button>\n          <h3>{ title } </h3>\n          <div className=\"container\">\n            <div className=\"box26\">\n              <span className=\"box-title\">ルール</span>\n               {rule_content}\n          </div>\n        </div>\n          <TrailMakingTest \n          exp_name={props.exp_name}\n          num={props.num}\n          step={props.step}\n          trial_num = { props.trial_num }\n          trial_step = { props.trial_step }\n          lang = {props.lang}\n          task_r={props.task_r} \n          phase={phase}\n          onClearHistory={props.onClearHistory}\n          onUpdateResult={props.onUpdateResult}\n          nextPhase={props.nextPhase}\n          />\n        \n      </div>\n    );\n  }\n\nexport default TaskPage;\n","import React from 'react';\nimport {Line} from 'react-chartjs-2'\nimport { Chart as ChartJS } from 'chart.js/auto';\n\nfunction LineChart(props) {\n    let UserData = props.data;\n    const cond_data = UserData.filter(item=> item[props.condition_label] === props.condition );\n    const x_label = props.x;\n    const y_label = props.y;\n    const x_data = cond_data.map((data) => data[x_label]);\n    const y_data = cond_data.map((data) => data[y_label]);\n    let chartData = {\n        labels : x_data,\n        datasets:[{\n            data:y_data,\n            label:props.label,\n            borderColor:props.color,\n            borderWidth:2,\n        }],\n    }\n\n    const option = {\n        responsive: true,maintainAspectRatio: false\n    };\n\n    return <Line \n        data={chartData}\n        options={option}\n    />\n}\n\nexport default LineChart;","import React from 'react';\nimport LineChart from './LineChart';\nimport {  Link } from 'react-router-dom';\nimport '../css/Report.css';\n\nimport DownloadIcon from '@mui/icons-material/Download';\n\n\n//const debug_data = [{\"item_id\":\"0\",\"timestamp\":1656778994.663,\"reaction_time\":2.058000087738037,\"phase\":\"trialB\"},{\"item_id\":\"1\",\"timestamp\":1656778996.594,\"reaction_time\":1.930999994277954,\"phase\":\"trialB\"},{\"item_id\":\"2\",\"timestamp\":1656778997.209,\"reaction_time\":0.6150000095367432,\"phase\":\"trialA\"},{\"item_id\":\"3\",\"timestamp\":1656778997.727,\"reaction_time\":0.5179998874664307,\"phase\":\"trialA\"},{\"item_id\":\"4\",\"timestamp\":1656778999.35,\"reaction_time\":1.622999906539917,\"phase\":\"trialA\"},{\"item_id\":\"5\",\"timestamp\":1656779000.608,\"reaction_time\":1.258000135421753,\"phase\":\"trialA\"},{\"item_id\":\"6\",\"timestamp\":1656779001.416,\"reaction_time\":0.807999849319458,\"phase\":\"trialA\"},{\"item_id\":\"7\",\"timestamp\":1656779002.109,\"reaction_time\":0.693000078201294,\"phase\":\"trialA\"},{\"item_id\":\"8\",\"timestamp\":1656779002.987,\"reaction_time\":0.878000020980835,\"phase\":\"trialA\"},{\"item_id\":\"9\",\"timestamp\":1656779003.736,\"reaction_time\":0.749000072479248,\"phase\":\"trialA\"}];\n\n\nfunction json2csv(jsons) {\n    const header = Object.keys(jsons[0]).join(',') + \"\\n\";\n    const body = jsons.map(function(d) {\n        return Object.keys(d).map(function(key) {\n            return d[key];\n        }).join(',');\n    }).join(\"\\n\");\n    return header + body;\n}\n\nfunction download(save_path,result){\n    \n    const element = document.createElement(\"a\");\n    const file = new Blob([result], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = save_path;\n    document.body.appendChild(element);\n    element.click();\n    \n  }\n\nfunction Report (props) { \n    const save_path =  props.setting.exp_name+\".csv\";\n    const data = props.data.length>0?props.data:[];\n    let results = JSON.stringify(props.setting)+\"\\n\" \n    results = results + (props.data.length>0?json2csv(data):\"\");\n        return(\n            <div className='Report'>\n                <div className='chart-container'>\n                    <div className='my-chart' >\n                        <LineChart data={data} x=\"item_id\" y=\"reaction_time\" condition_label=\"phase\"\n                        condition=\"partA\"\n                        label=\"Part A\"\n                        color=\"rgb(75, 192, 192)\"/>\n                    </div>\n\n                    <div className='my-chart'>\n                        <LineChart data={data} x=\"item_id\" y=\"reaction_time\" condition_label=\"phase\"\n                        condition=\"partB\"\n                        label=\"Part B\"\n                        color=\"rgb(75, 100, 192)\"/>\n                </div>\n                </div>\n            <div className=\"button-container\">\n                <button style={{\"width\":500,\"marginLeft:\":100}} className=\"dl-btn\" onClick={()=>download(save_path,results)}>  \n                    <a>Download Results </a>\n                    <DownloadIcon className='icon'/>\n                </button>\n                <button style={{\"width\":500,\"marginLeft\":100}} className=\"my-btn\"> <Link to={props.nextPhase}>Try Again</Link></button>\n            </div>\n            </div>\n            );\n}\n\n\nexport default Report;","import React, { Component } from 'react';\nimport './css/App.css';\nimport Setting from './components/Setting'\nimport TaskPage from './components/TaskPage';\nimport Report from './components/Report'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nconst save_dir = \"../results/\";\nconst trial_num = 1;\nconst trial_step = 1;\nconst lang = \"en\";\n\nconst defaultSettings = {\n    num: 1,\n    step: 1,\n    task_r: false,\n    exp_name: 'hu'\n}\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            phase: \"setting\",\n            setting: {\n                num: defaultSettings.num,\n                step: defaultSettings.step,\n                task_r: defaultSettings.task_r,\n                exp_name: defaultSettings.exp_name\n            },\n            results: Array(),\n        };\n\n    }\n\n    reset() {\n        if (window.confirm('リセットすると、今までの成績は無くなります。本当にリセットしますか？')) {\n            window.location.reload();\n        }\n    }\n\n\n    handleParameterChange(name, v) {\n        const setting = this.state.setting;\n        if (name === \"task_r\" || name === \"exp_name\") {\n            setting[name] = v;\n        } else {\n            setting[name] = parseFloat(v);\n        }\n    }\n\n\n    onUpdateResult(data) {\n        this.state.results.push(data);\n    }\n\n    generage_page(isTrial, taskType, nextPhase) {\n        return ( < TaskPage isTrial = { isTrial }\n            taskType = { taskType }\n            nextPhase = { nextPhase } //{ this.handleNext.bind(this, phase) }\n            Reset = { this.reset }\n            exp_name = { this.state.setting.exp_name }\n            num = { this.state.setting.num }\n            step = { this.state.setting.step }\n            trial_num = { trial_num }\n            trial_step = { trial_step }\n            lang = { lang }\n            task_r = { this.state.setting.task_r }\n            onUpdateResult = { this.onUpdateResult.bind(this) }\n            />\n        );\n    }\n\n    render() {\n        const MySettingPage = (props) => {\n            return ( < Setting num = { this.state.setting.num }\n                step = { this.state.setting.step }\n                task_r = { this.state.setting.task_r }\n                exp_name = { this.state.setting.exp_name }\n                nextPhase = \"trialA\"\n                handleParamChange = { this.handleParameterChange.bind(this) }\n                Reset = { this.reset }\n                />\n            );\n        }\n        const TrailAPage = (props) => { return this.generage_page(true, 'A', \"../partA\"); }\n        const PartAPage = (props) => { return this.generage_page(false, 'A', \"../trialB\"); }\n        const TrailBPage = (props) => { return this.generage_page(true, 'B', \"../partB\"); }\n        const PartBPage = (props) => { return this.generage_page(false, 'B', \"../report\"); }\n\n        const ReportPage = (props) => {\n            return ( < Report data = { this.state.results }\n                setting = { this.state.setting }\n                save_dir = { save_dir }\n                nextPhase = \"/\" /\n                > );\n        }\n\n        return ( <\n            div >\n            <\n            BrowserRouter basename = '/index.html' >\n            <\n            Routes >\n            <\n            Route exact path = \"/\"\n            element = { < MySettingPage / > }\n            />  <\n            Route path = 'trialA'\n            element = { < TrailAPage / > }\n            />  <\n            Route path = 'partA'\n            element = { < PartAPage / > }\n            />  <\n            Route path = 'trialB'\n            element = { < TrailBPage / > }\n            />  <\n            Route path = 'partB'\n            element = { < PartBPage / > }\n            />  <\n            Route path = 'report'\n            element = { < ReportPage / > }\n            />  <\n            /Routes> <\n            /BrowserRouter> <\n            /div>\n        );\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( < App / > );"],"sourceRoot":""}